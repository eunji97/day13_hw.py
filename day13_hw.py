import turtle as t      
import random           # random함수

#상자 만들기
t.up()                  # 거북이 꼬리를 올림
t.goto(-250,-250)       # 거북이를 (-250,-250)으로 보냄
t.down()                # 꼬리를 내린다.
n = 4
for x in range(n):      # n번 반복
    t.forward(500)      # 500만큼 앞으로 이동
    t.left(360/n)       # 왼쪽으로 360/n만큼 회전
#거북이 튕기기위한 준비    
t.speed(0)              # 스피드 최대
t.up()                  # 거북이 꼬리를 올림
t.home()                # 거북이 각도와 좌표를 초기화함
t.down()                # 꼬리를 내림
t.color("blue")         # 색을 blue로 지정
a = random.randint(1, 360)           # 각도를 1부터 360도 까지 랜덤하게 저장
t.seth(a)                            # 거북이 머리방향을 랜덤으로 지정
#반복을 통한 거북이 튕기기
while -250 <= t.xcor() <= 250 and -250 <= t.ycor() <= 250:  # x와 y좌표가 지정범위에서 반복    
    n = t.heading()             # 거북이 머리각도를 n에 저장
    t.forward(5)                # 5만큼 앞으로 이동
    
    if 250 <= t.ycor():         # 윗쪽벽의 입사각에 대한 반사각  
        if 0 <= n <= 180:       # n의 범위가 0에서 180일때
             t.seth(360-n)      # 거북이의 머리방향이 (360-n)
             t.forward(5)       # 5만큼 앞으로 이동
                
    if t.ycor() <= -250:        # 아랫쪽벽의 입사각에 대한 반사각
        if 180 <= n <= 360:     # n의 범위가 180에서 360일때
            t.seth(360-n)       # 거북이의 머리방향이 (360-n) 
            t.forward(5)        # 5만큼 앞으로 이동
                                   
    if t.xcor() <= -250:        # 왼쪽벽의 입사각에 대한 반사각 
        if 180 <= n <= 270:     # n의 범위가 180에서 270일때
            t.seth(180-n)       # 거북이의 머리방향이 (180-n)
            t.forward(5)        # 5만큼 앞으로 이동
        else:  
            t.seth(180-n)       # 거북이의 머리방향이 (180-n)
            t.forward(5)        # 5만큼 앞으로 이동
                
    if 250 <= t.xcor():         # 오른쪽벽의 입사각에 대한 반사각
        if 270 <= n <= 360 :    # n의 범위가 270에서 360일때
            t.seth(180-n)       # 거북이의 머리방향이 (180-n)  
            t.forward(5)        # 5만큼 앞으로 이동
        else:  
            t.seth(180-n)       # 거북이의 머리방향이 (180-n)  
            t.forward(5)        # 5만큼 앞으로 이동
